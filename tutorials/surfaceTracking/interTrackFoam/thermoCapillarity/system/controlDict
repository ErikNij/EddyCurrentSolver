/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.0                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  | For copyright notice see file Copyright         |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

applicationClass    interTrackFoamUser;

startFrom           latestTime;

startTime           0;

stopAt              endTime;

endTime             3600.0;

deltaT              1e-2;
// deltaT              1e-8;


adjustTimeStep      yes;

maxCo               1;

maxDeltaT           0.1;
// deltaT              1e-8;

writeControl        adjustableRunTime;
// writeControl        timeStep;

writeInterval       0.1;
// writeInterval       1;

cycleWrite          0;

writeFormat         binary;

timeFormat          general;

timePrecision       6;

runTimeModifiable   yes;

functions
{
    compute_magU
    {
        type              expressionField;

        enabled           true;

        outputControl     timeStep;

        outputInterval    1;

        autowrite         false;

        verbose           true;

        fieldName         magU;

        expression        "mag(U)";

        dimension         [0 1 -1 0 0 0 0];
    }

    compute_vorticity
    {
        type              expressionField;

        enabled           true;

        outputControl     timeStep;

        outputInterval    1;

        autowrite         true;

        verbose           true;

        fieldName         curlU;

        expression        "curl(U)";

        dimension         [0 0 -1 0 0 0 0];
    }

    patchAverage
    {
        type              patchAverage;

        enabled           true;

        outputControlMode outputTime;

        verbose           true;

        patches
        (
            trackedSurface
            top
            bottom
            right
        );

        fields
        (
            c
            magU
        );
    }

//     forces
//     {
//         type patchExpression;
//         outputControl timeStep;
//         enabled true;
//         outputInterval    1;
//         autowrite         true;
//         patches (
//             trackedSurface
//         );
//
//         variables (
//             "pressure_force= p*rho*normal()*area();"
//             "viscous_force= -eta*snGrad(U)*area();"
//             "forces= pressure_force+viscous_force;"
//         );
//
//         expression "forces";
//         accumulations ( average sum );
//     }
}

libs (
    "libgroovyBC.so"
    "libsimpleSwakFunctionObjects.so"
    "libswakFunctionObjects.so"
    "libswakTopoSources.so"
) ;

// ************************************************************************* //

