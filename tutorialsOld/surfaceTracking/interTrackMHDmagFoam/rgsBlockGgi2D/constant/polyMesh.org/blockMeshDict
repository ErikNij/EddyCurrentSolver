/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.1                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


convertToMeters 0.001;

vertices
(
    ( -145.0 -0.625 -60.0 )
    ( -35.0 -0.625 -60.0 )
    ( 35.0 -0.625 -60.0 )
    ( 145.0 -0.625 -60.0 )
    ( -145.0 0.625 -60.0 )
    ( -35.0 0.625 -60.0 )
    ( 35.0 0.625 -60.0 )
    ( 145.0 0.625 -60.0 )
    ( -145.0 -0.625 0.0 )
    ( -35.0 -0.625 0.0 )
    ( 35.0 -0.625 0.0 )
    ( 145.0 -0.625 0.0 )
    ( -145.0 0.625 0.0 )
    ( -35.0 0.625 0.0 )
    ( 35.0 0.625 0.0 )
    ( 145.0 0.625 0.0 )
    ( -145.0 -0.625 20.0 )
    ( -35.0 -0.625 20.0 )
    ( 35.0 -0.625 20.0 )
    ( 145.0 -0.625 20.0 )
    ( -145.0 0.625 20.0 )
    ( -35.0 0.625 20.0 )
    ( 35.0 0.625 20.0 )
    ( 145.0 0.625 20.0 )
    ( -145.0 -0.625 140.0 )
    ( -35.0 -0.625 140.0 )
    ( 35.0 -0.625 140.0 )
    ( 145.0 -0.625 140.0 )
    ( -145.0 0.625 140.0 )
    ( -35.0 0.625 140.0 )
    ( 35.0 0.625 140.0 )
    ( 145.0 0.625 140.0 )
    ( -45.0 -0.625 -60.0 )
    ( -45.0 0.625 -60.0 )
    ( -45.0 -0.625 0.0 )
    ( -45.0 0.625 0.0 )
    ( -45.0 -0.625 20.0 )
    ( -45.0 0.625 20.0 )
    ( -45.0 -0.625 50.0 )
    ( -45.0 0.625 50.0 )
    ( -45.0 -0.625 140.0 )
    ( -45.0 0.625 140.0 )
    ( 45.0 -0.625 -60.0 )
    ( 45.0 0.625 -60.0 )
    ( 45.0 -0.625 0.0 )
    ( 45.0 0.625 0.0 )
    ( 45.0 -0.625 20.0 )
    ( 45.0 0.625 20.0 )
    ( 45.0 -0.625 50.0 )
    ( 45.0 0.625 50.0 )
    ( 45.0 -0.625 140.0 )
    ( 45.0 0.625 140.0 )
    ( -145.0 -0.625 50.0 )
    ( -145.0 0.625 50.0 )
    ( -35.0 -0.625 50.0 )
    ( -35.0 0.625 50.0 )
    ( 35.0 -0.625 50.0 )
    ( 35.0 0.625 50.0 )
    ( 145.0 -0.625 50.0 )
    ( 145.0 0.625 50.0 )
    ( -35.0 -0.625 10.0 )
    ( 35.0 -0.625 30.0 )
    ( -35.0 0.625 10.0 )
    ( 35.0 0.625 30.0 )
);

blocks
(
    hex ( 0 32 33 4 8 34 35 12 ) region_static ( 100 1 60 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 32 1 5 33 34 9 13 35 ) region_static ( 10 1 60 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 1 2 6 5 9 10 14 13 ) region_static ( 70 1 60 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 2 42 43 6 10 44 45 14 ) region_static ( 10 1 60 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 42 3 7 43 44 11 15 45 ) region_static ( 100 1 60 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 8 34 35 12 16 36 37 20 ) region_static ( 100 1 20 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 34 9 13 35 36 17 21 37 ) region_static ( 10 1 20 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 9 10 14 13 60 61 63 62 ) region_fluid ( 70 1 20 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 10 44 45 14 18 46 47 22 ) region_static ( 10 1 20 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 44 11 15 45 46 19 23 47 ) region_static ( 100 1 20 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 16 36 37 20 52 38 39 53 ) region_static ( 100 1 30 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 36 17 21 37 38 54 55 39 ) region_static ( 10 1 30 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 60 61 63 62 54 56 57 55 ) region_dynamic ( 70 1 30 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 18 46 47 22 56 48 49 57 ) region_static ( 10 1 30 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 46 19 23 47 48 58 59 49 ) region_static ( 100 1 30 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 52 38 39 53 24 40 41 28 ) region_static ( 100 1 90 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 38 54 55 39 40 25 29 41 ) region_static ( 10 1 90 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 54 56 57 55 25 26 30 29 ) region_static ( 70 1 90 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 56 48 49 57 26 50 51 30 ) region_static ( 10 1 90 ) simpleGrading ( 1.0 1.0 1.0 )
    hex ( 48 58 59 49 50 27 31 51 ) region_static ( 100 1 90 ) simpleGrading ( 1.0 1.0 1.0 )
);

edges
(
);

boundary
(
    front
    {
        type empty;
        faces
        (
            ( 0 32 34 8 )
            ( 32 1 9 34 )
            ( 1 2 10 9 )
            ( 2 42 44 10 )
            ( 42 3 11 44 )
            ( 8 34 36 16 )
            ( 34 9 17 36 )
            ( 9 10 61 60 )
            ( 10 44 46 18 )
            ( 44 11 19 46 )
            ( 16 36 38 52 )
            ( 36 17 54 38 )
            ( 60 61 56 54 )
            ( 18 46 48 56 )
            ( 46 19 58 48 )
            ( 52 38 40 24 )
            ( 38 54 25 40 )
            ( 54 56 26 25 )
            ( 56 48 50 26 )
            ( 48 58 27 50 )
        );
    }

    back
    {
        type empty;
        // This is just to demonstrate the manual write
        faces
        (
            ( 33 4 12 35 )
            ( 5 33 35 13 )
            ( 6 5 13 14 )
            ( 43 6 14 45 )
            ( 7 43 45 15 )
            ( 35 12 20 37 )
            ( 13 35 37 21 )
            ( 14 13 62 63 )
            ( 45 14 22 47 )
            ( 15 45 47 23 )
            ( 37 20 53 39 )
            ( 21 37 39 55 )
            ( 63 62 55 57 )
            ( 47 22 57 49 )
            ( 23 47 49 59 )
            ( 39 53 28 41 )
            ( 55 39 41 29 )
            ( 57 55 29 30 )
            ( 49 57 30 51 )
            ( 59 49 51 31 )
        );
    }

    infinity
    {
        type patch;
        faces
        (
            ( 0 32 33 4 )
            ( 32 1 5 33 )
            ( 1 2 6 5 )
            ( 2 42 43 6 )
            ( 42 3 7 43 )
            ( 24 40 41 28 )
            ( 40 25 29 41 )
            ( 25 26 30 29 )
            ( 26 50 51 30 )
            ( 50 27 31 51 )
            ( 0 4 12 8 )
            ( 8 12 20 16 )
            ( 16 20 53 52 )
            ( 52 53 28 24 )
            ( 3 7 15 11 )
            ( 11 15 23 19 )
            ( 19 23 59 58 )
            ( 58 59 31 27 )
        );
    }

    ggiLeftStatic
    {
        type patch;
        faces
        (
            ( 9 13 21 17 )
            ( 17 21 55 54 )
        );
    }

    ggiLeftDynamic
    {
        type patch;
        faces
        (
            ( 9 13 62 60 )
            ( 60 62 55 54 )
        );
    }

    ggiRightStatic
    {
        type patch;
        faces
        (
            ( 10 14 22 18 )
            ( 18 22 57 56 )
        );
    }

    ggiRightDynamic
    {
        type patch;
        faces
        (
            ( 10 14 63 61 )
            ( 61 63 57 56 )
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //


