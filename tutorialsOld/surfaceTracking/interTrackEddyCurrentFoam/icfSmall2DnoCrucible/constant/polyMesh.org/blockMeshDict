/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.2                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


convertToMeters 0.001;

vertices
(
    ( 85.0 -2.0 -200.0 ) // # 6
    ( 85.0 -2.0 -1.0 ) // # 7
    ( 85.0 -2.0 0.0 ) // # 8
    ( 85.0 -2.0 235.0 ) // # 9
    ( 85.0 -2.0 383.0 ) // # 10
    ( 85.0 -2.0 583.0 ) // # 11
    ( 86.0 -2.0 -200.0 ) // # 12
    ( 86.0 -2.0 -1.0 ) // # 13
    ( 86.0 -2.0 0.0 ) // # 14
    ( 86.0 -2.0 235.0 ) // # 15
    ( 86.0 -2.0 383.0 ) // # 16
    ( 86.0 -2.0 583.0 ) // # 17
    ( 100.0 -2.0 -200.0 ) // # 18
    ( 100.0 -2.0 -1.0 ) // # 19
    ( 100.0 -2.0 0.0 ) // # 20
    ( 100.0 -2.0 235.0 ) // # 21
    ( 100.0 -2.0 383.0 ) // # 22
    ( 100.0 -2.0 583.0 ) // # 23
    ( 115.0 -2.0 -200.0 ) // # 24
    ( 115.0 -2.0 -1.0 ) // # 25
    ( 115.0 -2.0 0.0 ) // # 26
    ( 115.0 -2.0 235.0 ) // # 27
    ( 115.0 -2.0 383.0 ) // # 28
    ( 115.0 -2.0 583.0 ) // # 29
    ( 300.0 -2.0 -200.0 ) // # 30
    ( 300.0 -2.0 -1.0 ) // # 31
    ( 300.0 -2.0 0.0 ) // # 32
    ( 300.0 -2.0 235.0 ) // # 33
    ( 300.0 -2.0 383.0 ) // # 34
    ( 300.0 -2.0 583.0 ) // # 35
    ( 85.0 2.0 -200.0 ) // # 36
    ( 85.0 2.0 -1.0 ) // # 37
    ( 85.0 2.0 0.0 ) // # 38
    ( 85.0 2.0 235.0 ) // # 39
    ( 85.0 2.0 383.0 ) // # 40
    ( 85.0 2.0 583.0 ) // # 41
    ( 86.0 2.0 -200.0 ) // # 42
    ( 86.0 2.0 -1.0 ) // # 43
    ( 86.0 2.0 0.0 ) // # 44
    ( 86.0 2.0 235.0 ) // # 45
    ( 86.0 2.0 383.0 ) // # 46
    ( 86.0 2.0 583.0 ) // # 47
    ( 100.0 2.0 -200.0 ) // # 48
    ( 100.0 2.0 -1.0 ) // # 49
    ( 100.0 2.0 0.0 ) // # 50
    ( 100.0 2.0 235.0 ) // # 51
    ( 100.0 2.0 383.0 ) // # 52
    ( 100.0 2.0 583.0 ) // # 53
    ( 115.0 2.0 -200.0 ) // # 54
    ( 115.0 2.0 -1.0 ) // # 55
    ( 115.0 2.0 0.0 ) // # 56
    ( 115.0 2.0 235.0 ) // # 57
    ( 115.0 2.0 383.0 ) // # 58
    ( 115.0 2.0 583.0 ) // # 59
    ( 300.0 2.0 -200.0 ) // # 60
    ( 300.0 2.0 -1.0 ) // # 61
    ( 300.0 2.0 0.0 ) // # 62
    ( 300.0 2.0 235.0 ) // # 63
    ( 300.0 2.0 383.0 ) // # 64
    ( 300.0 2.0 583.0 ) // # 65
    ( 0.0 -2.0 -200.0 ) // # 0
    ( 0.0 -2.0 -1.0 ) // # 1
    ( 0.0 -2.0 0.0 ) // # 2
    ( 0.0 -2.0 235.0 ) // # 3
    ( 0.0 -2.0 383.0 ) // # 4
    ( 0.0 -2.0 583.0 ) // # 5
    ( 0.0 2.0 -200.0 ) // # 66
    ( 0.0 2.0 -1.0 ) // # 67
    ( 0.0 2.0 0.0 ) // # 68
    ( 0.0 2.0 235.0 ) // # 69
    ( 0.0 2.0 383.0 ) // # 70
    ( 0.0 2.0 583.0 ) // # 71
);

blocks
(
    hex ( 0 6 36 30 1 7 37 31 ) region_static ( 1 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 5
    hex ( 1 7 37 31 2 8 38 32 ) region_static ( 1 1 1 ) simpleGrading ( 1.0 1.0 1.0 ) // # 6
    hex ( 2 8 38 32 3 9 39 33 ) region_dynamic ( 1 1 59 ) simpleGrading ( 1.0 1.0 1.0 ) // # 7
    hex ( 3 9 39 33 4 10 40 34 ) region_dynamic ( 1 1 37 ) simpleGrading ( 1.0 1.0 1.0 ) // # 8
    hex ( 4 10 40 34 5 11 41 35 ) region_static ( 1 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 9
    hex ( 6 12 42 36 7 13 43 37 ) region_static ( 4 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 10
    hex ( 7 13 43 37 8 14 44 38 ) region_static ( 4 1 1 ) simpleGrading ( 1.0 1.0 1.0 ) // # 11
    hex ( 8 14 44 38 9 15 45 39 ) region_static ( 4 1 59 ) simpleGrading ( 1.0 1.0 1.0 ) // # 12
    hex ( 9 15 45 39 10 16 46 40 ) region_static ( 4 1 37 ) simpleGrading ( 1.0 1.0 1.0 ) // # 13
    hex ( 10 16 46 40 11 17 47 41 ) region_static ( 4 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 14
    hex ( 12 18 48 42 13 19 49 43 ) region_static ( 4 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 15
    hex ( 13 19 49 43 14 20 50 44 ) region_static ( 4 1 1 ) simpleGrading ( 1.0 1.0 1.0 ) // # 16
    hex ( 14 20 50 44 15 21 51 45 ) region_static ( 4 1 59 ) simpleGrading ( 1.0 1.0 1.0 ) // # 17
    hex ( 15 21 51 45 16 22 52 46 ) region_static ( 4 1 37 ) simpleGrading ( 1.0 1.0 1.0 ) // # 18
    hex ( 16 22 52 46 17 23 53 47 ) region_static ( 4 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 19
    hex ( 18 24 54 48 19 25 55 49 ) region_static ( 47 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 20
    hex ( 19 25 55 49 20 26 56 50 ) region_static ( 47 1 1 ) simpleGrading ( 1.0 1.0 1.0 ) // # 21
    hex ( 20 26 56 50 21 27 57 51 ) region_static ( 47 1 59 ) simpleGrading ( 1.0 1.0 1.0 ) // # 22
    hex ( 21 27 57 51 22 28 58 52 ) region_static ( 47 1 37 ) simpleGrading ( 1.0 1.0 1.0 ) // # 23
    hex ( 22 28 58 52 23 29 59 53 ) region_static ( 47 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 24
    hex ( 60 0 30 66 61 1 31 67 ) region_static ( 22 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 0
    hex ( 61 1 31 67 62 2 32 68 ) region_static ( 22 1 1 ) simpleGrading ( 1.0 1.0 1.0 ) // # 1
    hex ( 62 2 32 68 63 3 33 69 ) region_fluid ( 22 1 59 ) simpleGrading ( 1.0 1.0 1.0 ) // # 2
    hex ( 63 3 33 69 64 4 34 70 ) region_dynamic ( 22 1 37 ) simpleGrading ( 1.0 1.0 1.0 ) // # 3
    hex ( 64 4 34 70 65 5 35 71 ) region_static ( 22 1 50 ) simpleGrading ( 1.0 1.0 1.0 ) // # 4
);

edges
(
);

boundary
(
    axis
    {
        type patch;
        faces
        (
            ( 60 66 67 61 )
            ( 61 67 68 62 )
            ( 62 68 69 63 )
            ( 63 69 70 64 )
            ( 64 70 71 65 )
        );
    }

    front
    {
        type empty;
        faces
        (
            ( 60 0 1 61 )
            ( 61 1 2 62 )
            ( 62 2 3 63 )
            ( 63 3 4 64 )
            ( 64 4 5 65 )
            ( 0 6 7 1 )
            ( 1 7 8 2 )
            ( 2 8 9 3 )
            ( 3 9 10 4 )
            ( 4 10 11 5 )
            ( 6 12 13 7 )
            ( 7 13 14 8 )
            ( 8 14 15 9 )
            ( 9 15 16 10 )
            ( 10 16 17 11 )
            ( 12 18 19 13 )
            ( 13 19 20 14 )
            ( 14 20 21 15 )
            ( 15 21 22 16 )
            ( 16 22 23 17 )
            ( 18 24 25 19 )
            ( 19 25 26 20 )
            ( 20 26 27 21 )
            ( 21 27 28 22 )
            ( 22 28 29 23 )
        );
    }

    back
    {
        type empty;
        faces
        (
            ( 30 66 67 31 )
            ( 31 67 68 32 )
            ( 32 68 69 33 )
            ( 33 69 70 34 )
            ( 34 70 71 35 )
            ( 36 30 31 37 )
            ( 37 31 32 38 )
            ( 38 32 33 39 )
            ( 39 33 34 40 )
            ( 40 34 35 41 )
            ( 42 36 37 43 )
            ( 43 37 38 44 )
            ( 44 38 39 45 )
            ( 45 39 40 46 )
            ( 46 40 41 47 )
            ( 48 42 43 49 )
            ( 49 43 44 50 )
            ( 50 44 45 51 )
            ( 51 45 46 52 )
            ( 52 46 47 53 )
            ( 54 48 49 55 )
            ( 55 49 50 56 )
            ( 56 50 51 57 )
            ( 57 51 52 58 )
            ( 58 52 53 59 )
        );
    }

    infinity
    {
        type patch;
        faces
        (
            ( 60 0 30 66 )
            ( 0 6 36 30 )
            ( 6 12 42 36 )
            ( 12 18 48 42 )
            ( 18 24 54 48 )
            ( 65 5 35 71 )
            ( 5 11 41 35 )
            ( 11 17 47 41 )
            ( 17 23 53 47 )
            ( 23 29 59 53 )
            ( 24 54 55 25 )
            ( 25 55 56 26 )
            ( 26 56 57 27 )
            ( 27 57 58 28 )
            ( 28 58 59 29 )
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //


